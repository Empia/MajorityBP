  * Fill through request
  * Refactor
  * Create test
  * Frame autocreating(for ctxelems)
  * Assembly [ Provide access to triple (object, params, arguments)] 1. req(el, in), assebmly(frame), running
  [* CHAIN Invoke -> Process -> Process ]



  
  [* Multiple parrams         isList
  [* Condition multiple args  isList

http://www.activiti.org/userguide/index.html#bpmnSequenceFlow
http://www.activiti.org/userguide/index.html#bpmnTask
http://www.activiti.org/userguide/index.html#bpmnGateways

http://www.activiti.org/userguide/index.html#bpmnSubprocessAndCallActivity


  * Slick integration
  * DB Scheme
  * API End-Point
  * Angular app
  * Resources 
  || Employees, Clients, Groups 
  || Process owning, viewers, access
  
  * ResAct blocks
  * Collab & sharing
  * Invoke card(Reporter)
  * Datablock?
  * Document block

  * Templates BP, ctx, sbj?
  * scope ctx, bp ?

  * Graph.js
  * Return in BProcess  [ Blocks that comes after process invoked ]
  * Link block[Input, return, ...]
  * Observer block http://www.activiti.org/userguide/index.html#bpmnEvents
  /** 2 Books read **/
  * Fully featured Resources
  

____
/Final/

  * Input block while proc/context running(wait for input if it paused)
  * Return in ProcElems [ Block that return blocks and arg&params ]
  * Merchant?
  * Bridge
  * Behav Resources
  * Behav model methods and elements
  * Neo4J integration?
  * Complex block
  * Block register / Elem -> Block conversion
  * Sandbox for testing external Blocks
  * Service
  * RPC
  * Zappier
  * Regressor-core
